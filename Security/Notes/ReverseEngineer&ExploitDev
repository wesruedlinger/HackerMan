////////// Reverse Engineering Flags \\\\\\\\\\\\\\\

#What is %RAX and %EAX main purpose?
 They are the first return registers for x86-64 and x86 

#What is %RIP and %EIP main purpose?
 %RIP/%EIP are the 64 bit and 32 bit instruction pointers that hold the memory address to the next instruction 

#What is %RBP and %EBP main purpose?
 They are the 64 bit and 32 bit stack base pointers 

#Which of these registers has a size of 32 bits?
 %R12D 

#What register does the JE instruction rely upon?
 flags

#What flag does the JE instruction rely upon?
 zero flag

#What does the CMP instruction do?
 Compares 2 values via subtraction 

#Main:
#   Mov R8, 25
#   Push R8
#   Mov R10, 50
#   Push R10
#   Pop RAX
#
#What value is on the top of the stack? 
 25

#Main:
#   Mov R8, 25
#   Push R8
#   Mov R10, 50
#   Push R10
#   Pop RAX
#
#What value is in the return register?
 50

#Main:
#    Mov R9, 5
#    Mov R10, 20
#    Add R10, R9
#    CMP R10, R9
#    JE Clean
#    Mov RAX, 14
#    ret
#
#Clean:
#    Mov RAX, 0
#    ret

#What value is returned?
 14

#What is %R8 size in bits?
64

#What does the printf() function do?
 It sends formatted output to standard out (E.g. the terminal) 

#What does the fgets() function do?
 It reads a line from the specified stream and stores it into a character array 

#What does the strcmp() function do?
 It compares two strings (character arrays) 

#What is a successful return code for the strcmp() function?
 0

#What is main()?
 It is the designated entry point to a program 

#int main(void){
#       int num1 = 77;
#       printf("%d",num1);
#       return 0;
#}
#
#What is num1’s variable type?
 integer

#What is “%d” in this program?
  %d is a digit placeholder within printf() 

#What is important about “return 0”?
  A return code of 0 is generally a clean exit of the program 

























