Pivot
Hostname: INTERNET_HOST
IP: 10.10.0.40 (Use the provided floating IP only for login from outside of the network

T1
Hostname: BLUE_Host-1
IP: 172.16.82.106

T2
Hostname: BLUE_Host-3
IP: 172.16.82.112

T3
Hostname: BLUE_INT_DMZ_HOST-1
IP: 172.16.40.10

T4
Hostname: (Will be provided by Mission Command)
IP: 10.50.XXX.XXX (Will be Provided by Mission Command)
creds: studentX:passwordX (X = Student Number)
Known Ports: Unknown
Action: Interrogate Target and validate Signatures

T5
Hostname: BLUE_PRIV_HOST-1
IP: 192.168.1.10
creds: student : password
Action: Allow traffic through NAT Capabilities

T6
Hostname: BLUE_PRIV_HOST-3
IP: 192.168.3.30
creds: student : password
Action: Allow traffic through NAT Capabilities
---------------------------------------------------------------------------
#From T1--Blue_Host1--172.16.82.106
Objective 1: Allow New and Established traffic to/from via SSH, TELNET, and RDP
sudo iptables -A INPUT -m state --state NEW -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A INPUT -m state --state ESTABLISHED -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A OUTPUT -m state --state ESTABLISHED -p tcp -m multiport --ports 22,23,3389 -j ACCEPT

#From T1--Blue_Host1--172.16.82.106
Objective 2: Change the Default Policy in the Filter Table for the INPUT, OUTPUT, and FORWARD chains to DROP
sudo iptables -t filter -P INPUT DROP
sudo iptables -t filter -P OUTPUT DROP
sudo iptables -t filter -P FORWARD DROP

#From T1--Blue_Host1--172.16.82.106
Objective 3: Only allow Pivot to perform ping (ICMP) operations to/from
sudo iptables -A OUTPUT -p icmp -d 10.10.0.40 -j ACCEPT
sudo iptables -A INPUT -p icmp -s 10.10.0.40 -j ACCEPT

#From T1--Blue_Host1--172.16.82.106
Objective 4: Allow ports 6579 and 4444 for both udp and tcp traffic
sudo iptables -A INPUT -p tcp -m multiport --ports 6579,4444 -j ACCEPT
sudo iptables -A OUTPUT -p tcp -m multiport --ports 6579,4444 -j ACCEPT
sudo iptables -A INPUT -p udp -m multiport --ports 6579,4444 -j ACCEPT
sudo iptables -A OUTPUT -p udp -m multiport --ports 6579,4444 -j ACCEPT

#From T1--Blue_Host1--172.16.82.106
Objective 5: Allow New and Established traffic to/from via HTTP
sudo iptables -A INPUT -m state --state NEW,ESTABLISHED -p tcp --sport 80 -j ACCEPT
sudo iptables -A INPUT -m state --state NEW,ESTABLISHED -p tcp --dport 80 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW,ESTABLISHED -p tcp --sport 80 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW,ESTABLISHED -p tcp --dport 80 -j ACCEPT

-----------------------------------------------------------------------------------
#From T3---BLUE_INT_DMZ_HOST-1---172.16.40.10
Objective 1: Allow New and Established traffic to/from via SSH, TELNET, and RDP
sudo iptables -A INPUT -m state --state NEW -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A INPUT -m state --state ESTABLISHED -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW -p tcp -m multiport --ports 22,23,3389 -j ACCEPT
sudo iptables -A OUTPUT -m state --state ESTABLISHED -p tcp -m multiport --ports 22,23,3389 -j ACCEPT

#From T3---BLUE_INT_DMZ_HOST-1---172.16.40.10
Objective 2: Change the Default Policy in the Filter Table for the INPUT, OUTPUT, and FORWARD chains to DROP
sudo iptables -t filter -P INPUT DROP
sudo iptables -t filter -P OUTPUT DROP
sudo iptables -t filter -P FORWARD DROP

#From T3---BLUE_INT_DMZ_HOST-1---172.16.40.10
Objective 3: Allow New and Established traffic to/from via HTTP
sudo iptables -A INPUT -m state --state NEW,ESTABLISHED -p tcp --sport 80 -j ACCEPT
sudo iptables -A INPUT -m state --state NEW,ESTABLISHED -p tcp --dport 80 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW,ESTABLISHED -p tcp --sport 80 -j ACCEPT
sudo iptables -A OUTPUT -m state --state NEW,ESTABLISHED -p tcp --dport 80 -j ACCEPT
-----------------------------------------------------------------------------------
#From T2---BLUE_Host-3---172.16.82.112
Objective 1: Create input and output base chains with: <Hooks> <Priority of 0> <Policy as Accept>
sudo nft add table ip CCTC
sudo nft add chain ip CCTC Hookin { type filter hook input priority 0 \; policy accept \;}
sudo nft add chain ip CCTC Hookout { type filter hook output priority 0 \; policy accept \;}

Objective 2: Allow New and Established traffic to/from via SSH, TELNET, and RDP
sudo nft add rule ip CCTC Hookin tcp sport { 22, 23, 3389} ct state {new, established}
sudo nft add rule ip CCTC Hookin tcp dport { 22, 23, 3389} ct state {new, established}
sudo nft add rule ip CCTC Hookout tcp sport { 22, 23, 3389} ct state {new, established}
sudo nft add rule ip CCTC Hookout tcp dport { 22, 23, 3389} ct state {new, established}

Objective 3: Change your chains to now have a policy of Drop
sudo nft replace chain ip CCTC Hookin { type filter hook input priority 0 \; policy drop \;}
sudo nft replace chain ip CCTC Hookout { type filter hook output priority 0 \; policy drop \;}

Objective 4: Only allow Pivot to perform ping (ICMP) operations to/from


Objective 5: Allow ports 5050 and 5150 for both udp and tcp traffic


Ojective 6: Allow New and Established traffic to/from via HTTP


-----------------------------------------------------------------------------------
#From T5---Blue_Priv_Host-1---192.168.1.10
Objective: Configure POSTROUTING chain to translate T5 IP address to T1 (Create the rule by specifying the Layer 2 information first then Layer 3)

Step 1: Set default gateway for traffic from T5 to go to T1
ssh 192.168.1.10 (T5)
sudo route add default gw 192.168.1.1 eth0
ip route	#check that it took

Step 2: 
ssh 172.16.82.106 (T1)




